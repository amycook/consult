pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite")) +
scale_colour_manual(values = c("sienna1","navajowhite")) +
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
theme(legend.title = "party")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite")) +
scale_colour_manual(values = c("sienna1","navajowhite")) +
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
theme(legend.title = element_text("party"))
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'party') +
scale_colour_manual(values = c("sienna1","navajowhite")) +
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'party') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'party')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different from boosted tree') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different from boosted tree')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different from \n boosted tree') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different from \n boosted tree')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted tree') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted tree')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
theme(axis.text.x = c(element_text("try")))
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method")
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
reduc.totAUC <- readRDS("report_data/reduc_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(reduc.totAUC[[2]], reduc.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
reduc.plot = melt(reduc.totAUC)
reduc.plot$sig.diff = ifelse(reduc.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(reduc.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
mice.totAUC <- readRDS("report_data/mice_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(mice.totAUC[[2]], mice.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
as.good
pv
mice.plot = melt(mice.totAUC)
mice.plot$sig.diff = ifelse(mice.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(mice.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
mice.plot %>% mutate('data' = 'imputed')
mice.plot %>% mutate('data' = 'imputed') %>% head
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
summary(combine)
combine$data = as.factor(combine$data)
head(combine)
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
facet_wrap(~ L1) +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(data), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(data, L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(data, factor(L1)), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(data), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(mice.plot %>% mutate('data' = 'imputed'),
reduc.plot %>% mutate('data' = 'original'))
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(reduc.plot %>% mutate('data' = 'original'),
mice.plot %>% mutate('data' = 'imputed')
)
combine$data = as.factor(combine$data)
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(reduc.plot %>% mutate('data' = 'original'),
mice.plot %>% mutate('data' = 'imputed')
)
combine$data = as.factor(combine$data)
combine$data <- factor(combine$data, levels=c('original','imputed'))
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Data Source') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(reduc.plot %>% mutate('data' = 'original'),
mice.plot %>% mutate('data' = 'imputed')
)
combine$data = as.factor(combine$data)
combine$data <- factor(combine$data, levels=c('original','imputed'))
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("thistle1","red2"),
name = 'Data Source') +
scale_colour_manual(values = c("thistle1","red2"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
combine = rbind(reduc.plot %>% mutate('data' = 'original'),
mice.plot %>% mutate('data' = 'imputed')
)
combine$data = as.factor(combine$data)
combine$data <- factor(combine$data, levels=c('original','imputed'))
ggplot(combine, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = data, colour = data), alpha = 1) +
stat_summary(aes(L1), fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("plum2","red2"),
name = 'Data Source') +
scale_colour_manual(values = c("plum2","red2"),
name = 'Data Source')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "Comparison of Original Data vs Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
mice.totAUC <- readRDS("report_data/mice_df_auc.rds")
#significance test between all methods and boosted trees
index = c(1,3,4)
pv = data.frame('method' = c("log","rf","naiive"), "p-value" = NA)
for(i in seq_along(index)){
temp = t.test(mice.totAUC[[2]], mice.totAUC[[index[i]]])$p.value %>% round(3)
pv[i,2] = temp
}
#methods that cannot be classified as significantly better or worse than boosted:
as.good = pv %>% filter(p.value>0.05) %>% .$method %>% as.character
as.good = c(as.good, "boost")
mice.plot = melt(mice.totAUC)
mice.plot$sig.diff = ifelse(mice.plot$L1 %in% as.good, FALSE, TRUE)
ggplot(mice.plot, aes(x= factor(L1), y= value)) +
geom_violin(aes(fill = sig.diff, colour = sig.diff), alpha = 1) +
geom_jitter(alpha = 0.2, shape = 16, colour = 'gray65') +
stat_summary(fun.y="mean", geom="point", colour = "gray50", shape =3) +
scale_fill_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees') +
scale_colour_manual(values = c("sienna1","navajowhite"),
name = 'Significantly different \nfrom boosted trees')+
labs(x = "Method", y = "Area Under Curve (AUC)",
title = "AUC Distribution from 100 models of each Method - Imputed Data") +
scale_x_discrete(labels=c("boost" = "Boosted Trees", "log" = "Logistic Regression",
"naiive" = "Naiive Bayes", "rf" = "Random Forest"))
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),repos = c('http://irkernel.github.io/', getOption('repos')), type = 'source')
IRkernel::installspec(user = FALSE)
library('devtools')
library(RCurl)
install_local('./rzmq')
install.packages(c('repr', 'pbdZMQ'))
devtools::install_github('IRkernel/IRdisplay')
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
library('knitr')
library('ggplot2')
library("plyr")
library("dplyr")
library('magrittr')
library('reshape2')
library("rpart")
library('car')
library('e1071')
library('party')
library('randomForest')
library('RColorBrewer')
library('pwr')
# detect OS
if(.Platform$OS.type == 'windows'){
# setwd("C:/Users/n9232371/Documents/Consultbusiness/data")
opts_knit$set(root.dir= "C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data")
} else{
# setwd("~/OneDrive/shared files/Bligh Tanner/masters/data")
opts_knit$set(root.dir= '~/Documents/github/consult/finalwriteup/report_data')
}
opts_chunk$set(fig.width=8, fig.depth = 5, dpi = 300, warning = FALSE, message = FALSE, echo = FALSE)
getwd()
plot.pvals = readRDS("AOV_varimp_plot.rds")
ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0, 0.05, .25, .5, .75, 1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
