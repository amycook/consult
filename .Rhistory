p
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each job category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0))
p
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each job category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
colour = 'deeppink3'
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percent.clust=FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
}
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percent.clust=FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
}
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percent.clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
}
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percent.clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percentof_clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Business', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Business', df=all7c, percentof_clust=TRUE)
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour) +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank(), legend.title = 'percent')+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
if(percentof_clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var1, y=Var2)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis group') +
theme(axis.ticks=element_blank())+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Biz.type', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Num.disc', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'maj.pos', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'majority.pos', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'majority.pos', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Billing.Type', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Discipline', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Discipline', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'code.client', df=all7c, percentof_clust=FALSE)
var = 'JD.Second'
ddply(all7c, c(var), summarise, sum(inv.mlsto))
ddply(all7c, c(var), summarise, summ = sum(inv.mlsto))
a[-order(a$summ),][,var]
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
a[-order(a$summ),][,var]
-order(a$summ)
class(a$summ)
a[-order(a$summ),]
a
a$summ
order(a$summ)
-order(a$summ)
a[order(-a$summ),]
a[order(-a$summ),][,var]
levels(df[,var]) = factor(df[,var], levels= a[order(-a$summ),][,var])
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
a
levels(df[,var]) = factor(df[,var], levels= a[order(-a$summ),][,var])
levels(df[,var])
factor(df[,var], levels= a[order(-a$summ),][,var])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
colour = 'deeppink3'
clust = 'group.num'
var = 'JD.Second'
df=all7c
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
a
factor(df[,var], levels= a[order(-a$summ),][,var])
levels= a[order(-a$summ),][,var]
levels
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each Y-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
p
clust.summary
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
#order var levels by highest amount invoiced total
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
if(percentof_clust== TRUE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each cluster') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=TRUE)
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
#order var levels by highest amount invoiced total
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
if(percentof_clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each cluster') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
#order var levels by highest amount invoiced total
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
if(percentof_clust== TRUE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each cluster') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
#order var levels by highest amount invoiced total
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
if(percentof_clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each cluster') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap<- function(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE){
#order var levels by highest amount invoiced total
a = ddply(df, c(var), summarise, summ = sum(inv.mlsto))
df[,var] = factor(df[,var], levels= a[order(-a$summ),][,var])
if(percentof_clust== FALSE){
#table with percentages within each category
tbl= round(prop.table(table(df[,clust],df[,var]),1)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='', y='', title= 'percentage of jobs in each cluster') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
else{
#table with percentages within each cluster
tbl= round(prop.table(table(df[,clust],df[,var]),2)*100,2) %>% as.data.frame
p = ggplot(tbl, aes(x=Var2, y=Var1)) +
geom_tile(aes(fill=Freq), colour = 'white') +
scale_fill_gradient(low='white', high=colour, name = 'percent') +
labs(x='Profit measure', y='', title= 'percentage of jobs in each X-axis category') +
theme(axis.ticks=element_blank(),
axis.text.x=element_text(angle=45,hjust=1))+
scale_x_discrete(expand = c(0, 0)) + scale_y_discrete(expand = c(0, 0))
}
print(p)
}
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'JD.Second', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'majority.pos', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'majority.pos', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Billing.Type', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'Discipline', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'code.client', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'code.client', df=all7c, percentof_clust=TRUE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'code.contact', df=all7c, percentof_clust=FALSE)
heatmap(colour = 'deeppink3', clust = 'group.num', var = 'code.contact', df=all7c, percentof_clust=TRUE)
clust.summary
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages('extrafont')
library('extrafont')
source('~/.active-rstudio-document', echo=TRUE)
?loadfonts
loadfonts(device='win')
loadfonts(device='pdf')
source('~/.active-rstudio-document', echo=TRUE)
p= ggplot(sub10 %>% filter(variable == 'pc.seniorpro', Discipline == 'Structural'), aes(x=percent.hrs, y= return.cut, colour= 'blue')) +
geom_smooth(method=loess, se=TRUE, aes(fill='blue'), alpha=.35) +
#                                 stat_summary(fun.x= mean, geom='point', shape = 2) +
#stat_summary(fun.data= mean_sdl, geom='crossbar', mult =1) +
theme(legend.position="none",
axis.text.x=element_text(angle=45,hjust=1),
text=element_text(size=12) ,
plot.title = element_text(size=11, family= 'Times New Roman', face='plain'),
axis.title.y = element_text(size = 9, family= 'Times New Roman'),
axis.title.x = element_text(size=9, family= 'Times New Roman'),
axis.text = element_text(size = 7.5),
panel.background = element_rect(fill = "gray96"),
panel.grid.major = element_line(colour='white' ),
axis.ticks= element_line( colour='gray85')
) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits=c(0,100)) +
scale_y_continuous(breaks = seq(1, 10, by = 1), limits=c(1,10)) +
# facet_wrap(~ variable) + , labeller =  label_value(variable, c('a','b','c','d','e','f','g','h')) +
geom_point(aes(colour = 'blue'), alpha = 0.5) +
theme(strip.text = element_text(colour = 'white'), strip.background = element_rect(fill = 'black')) +
labs(x = '% Contribution by hours of Senior Professional',
y = 'Return per Dollar Category', title=
'Senior Professional % Contribution vs Return Category')
p
ggsave(p,filename='senior_pro.png',path='~/OneDrive/shared files/conferences/Visualisation')
ggsave(p,filename='senior_pro.png',path='~/OneDrive/shared files/conferences/Visualisation')
ggsave(p,filename='senior_pro.png',path='~/OneDrive/shared files/conferences/Visualisation')
p= ggplot(sub10 %>% filter(variable == 'pc.seniorpro', Discipline == 'Structural'), aes(x=percent.hrs, y= return.cut, colour= 'blue')) +
geom_smooth(method=loess, se=TRUE, aes(fill='blue'), alpha=.35) +
#                                 stat_summary(fun.x= mean, geom='point', shape = 2) +
#stat_summary(fun.data= mean_sdl, geom='crossbar', mult =1) +
theme(legend.position="none",
axis.text.x=element_text(angle=45,hjust=1),
text=element_text(size=12) ,
plot.title = element_text(size=12, family= 'Times New Roman', face='plain'),
axis.title.y = element_text(size = 10, family= 'Times New Roman'),
axis.title.x = element_text(size=10, family= 'Times New Roman'),
axis.text = element_text(size = 8.5),
panel.background = element_rect(fill = "gray96"),
panel.grid.major = element_line(colour='white' ),
axis.ticks= element_line( colour='gray85')
) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits=c(0,100)) +
scale_y_continuous(breaks = seq(1, 10, by = 1), limits=c(1,10)) +
# facet_wrap(~ variable) + , labeller =  label_value(variable, c('a','b','c','d','e','f','g','h')) +
geom_point(aes(colour = 'blue'), alpha = 0.5) +
theme(strip.text = element_text(colour = 'white'), strip.background = element_rect(fill = 'black')) +
labs(x = '% Contribution by hours of Senior Professional',
y = 'Return per Dollar Category', title=
'Senior Professional % Contribution vs Return Category')
p
p= ggplot(sub10 %>% filter(variable == 'pc.seniorpro', Discipline == 'Structural'), aes(x=percent.hrs, y= return.cut, colour= 'blue')) +
geom_smooth(method=loess, se=TRUE, aes(fill='blue'), alpha=.35) +
#                                 stat_summary(fun.x= mean, geom='point', shape = 2) +
#stat_summary(fun.data= mean_sdl, geom='crossbar', mult =1) +
theme(legend.position="none",
axis.text.x=element_text(angle=45,hjust=1),
text=element_text(size=12) ,
plot.title = element_text(size=13, family= 'Times New Roman', face='plain'),
axis.title.y = element_text(size = 11, family= 'Times New Roman'),
axis.title.x = element_text(size=11, family= 'Times New Roman'),
axis.text = element_text(size = 8.5),
panel.background = element_rect(fill = "gray96"),
panel.grid.major = element_line(colour='white' ),
axis.ticks= element_line( colour='gray85')
) +
scale_x_continuous(breaks = seq(0, 100, by = 10), limits=c(0,100)) +
scale_y_continuous(breaks = seq(1, 10, by = 1), limits=c(1,10)) +
# facet_wrap(~ variable) + , labeller =  label_value(variable, c('a','b','c','d','e','f','g','h')) +
geom_point(aes(colour = 'blue'), alpha = 0.5) +
theme(strip.text = element_text(colour = 'white'), strip.background = element_rect(fill = 'black')) +
labs(x = '% Contribution by hours of Senior Professional',
y = 'Return per Dollar Category', title=
'Senior Professional % Contribution vs Return Category')
p
ggsave(p,filename='senior_pro.png',path='~/OneDrive/shared files/conferences/Visualisation')
?update.packages
update.packages(lib.loc = 'C:/Progra~1/R/R-3.2.3/library',
checkBuilt=TRUE, ask=FALSE)
library('ggplot2', lib = 'C:/Progra~1/R/R-3.2.3/library')
update.packages(lib.loc = 'C:/Progra~1/R/R-3.2.3/library',
instlib = 'C:/Progra~1/R/R-3.2.3/library',
checkBuilt=TRUE, ask=FALSE)
library('ggplot2', lib = 'C:/Progra~1/R/R-3.2.3/library')
install.packages('ggplot2', lib = 'C:/Progra~1/R/R-3.2.3/library')
install.packages("ggplot2", lib = "C:/Progra~1/R/R-3.2.3/library")
library('ggplot2', lib = 'C:/Progra~1/R/R-3.2.3/library')
library('tidyr', lib = 'C:/Progra~1/R/R-3.2.3/library')
install.packages('tidyr', lib = 'C:/Progra~1/R/R-3.2.3/library')
library('tidyr', lib = 'C:/Progra~1/R/R-3.2.3/library')
library('Rcpp', lib = 'C:/Progra~1/R/R-3.2.3/library')
library('rmarkdown',lib='C:/Progra~1/R/R-3.2.3/library')
ggplot(mpg, aes(cty, hwy)) +
geom_point()
ggplot(mpg, aes(cty, hwy)) +
geom_count()
