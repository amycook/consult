q<- ggplot(data=var.imp, aes(x=var, y=imp)) + theme(axis.text.x=element_text(angle=45,hjust=1))
q + geom_bar(stat='identity')
q
var.imp
q + geom_bar(stat='identity')
saveRDS(var.imp, "C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data/cfor_varimp.rds")
library(gbm)
setwd("D:/Work It Current/Nicole Data/AgeofOnset")
load("D:/Work It Current/Nicole Data/AgeofOnset/AgeofOnset PredModel.RData")
j
test_fold <- parkpdShort[folds[[j]], ]
run_gbmOnsetGroup2 <- gbm(as.formula(formula_onsetgroup2), data = parkpdShort[-folds[[j]], ],
distribution = 'bernoulli', n.trees = 3000, shrinkage = 0.001,
interaction.depth = 2, n.minobsinnode = 30)
run_gbmOnsetGroup2$fit
as.formula(formula_onsetgroup2)
data = parkpdShort[-folds[[j]], ]
head(data)
class(data$onset_group2)
parkpdShort$onset_group2 <- as.character(parkpdShort$onset_group2)
folds <- createFolds(parkpdShort$onset_group2, k = 10, list = TRUE, returnTrain = FALSE) # set up 10 fold using caret function
test_fold <- parkpdShort[folds[[j]], ]
run_gbmOnsetGroup2 <- gbm(as.formula(formula_onsetgroup2), data = parkpdShort[-folds[[j]], ],
distribution = 'bernoulli', n.trees = 3000, shrinkage = 0.001,
interaction.depth = 2, n.minobsinnode = 30)
run_gbmOnsetGroup2v4fit
run_gbmOnsetGroup2run_gbmOnsetGroup2$fit
run_gbmOnsetGroup2$fit
parkpdShort$onset_group2 <- as.numeric(parkpdShort$onset_group2)
folds <- createFolds(parkpdShort$onset_group2, k = 10, list = TRUE, returnTrain = FALSE) # set up 10 fold using caret function
test_fold <- parkpdShort[folds[[j]], ]
run_gbmOnsetGroup2 <- gbm(as.formula(formula_onsetgroup2), data = parkpdShort[-folds[[j]], ],
distribution = 'bernoulli', n.trees = 3000, shrinkage = 0.001,
interaction.depth = 2, n.minobsinnode = 30)
library(caret)
parkpdShort$onset_group2 <- as.numeric(parkpdShort$onset_group2)
folds <- createFolds(parkpdShort$onset_group2, k = 10, list = TRUE, returnTrain = FALSE) # set up 10 fold using caret function
test_fold <- parkpdShort[folds[[j]], ]
run_gbmOnsetGroup2 <- gbm(as.formula(formula_onsetgroup2), data = parkpdShort[-folds[[j]], ],
distribution = 'bernoulli', n.trees = 3000, shrinkage = 0.001,
interaction.depth = 2, n.minobsinnode = 30)
run_gbmOnsetGroup2$fit
class(parkpdShort$onset_group2)
run_gbmOnsetGroup2Pred <- predict(run_gbmOnsetGroup2, test_fold, n.tree = 3000)
head(run_gbmOnsetGroup2Pred)
parkpdShort$onset_group2 <- as.integer(parkpdShort$onset_group2)
folds <- createFolds(parkpdShort$onset_group2, k = 10, list = TRUE, returnTrain = FALSE) # set up 10 fold using caret function
test_fold <- parkpdShort[folds[[j]], ]
run_gbmOnsetGroup2 <- gbm(as.formula(formula_onsetgroup2), data = parkpdShort[-folds[[j]], ],
distribution = 'bernoulli', n.trees = 3000, shrinkage = 0.001,
interaction.depth = 2, n.minobsinnode = 30)
run_gbmOnsetGroup2Pred <- predict(run_gbmOnsetGroup2, test_fold, n.tree = 3000)
head(run_gbmOnsetGroup2Pred)
as.formula(formula_onsetgroup2)
run_gbmOnsetGroup2Pred <- predict(run_gbmOnsetGroup2, test_fold, n.tree = 3000, type = "response")
head(run_gbmOnsetGroup2Pred)
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
vars.vec<- c('Job.Source', 'Job.Detail.Secondary', 'Type', 'Project.Value', 'no.employees','code.client',
'client.age', 'contact.count', 'JD.Second', 'Billing.Type', 'dist','Post.Code',
'code.contact','contact.count', 'Job.Type.Primary','JD.Primary','ProjEng.Pos', 'code.ProjEng', 'pos.tech',
'majority.pos', 'pc.majpos')
extra=vars.vec
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
i
length(vars.vec)
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
summary(model)[[1]]
summary(model)[[1]] %>% rownames
library(magrittr)
summary(model)[[1]] %>% rownames
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars
extra[i]
mod.vars = sub(extra[i], "add.variable", mod.vars)
mod.vars
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
mod.vars
aov.loop<- function(extra=vars.vec){
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(incomp.vars[i], 11)
plot.pvals = rbind(plot.pvals,
data.frame(mod.vars, p.val, add.variable))
}}
aov.loop<- function(extra=vars.vec){
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(incomp.vars[i], 11)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
return(plot.pvals)
}}
plot.pvals = aov.loop(extra=vars.vec)
aov.loop<- function(extra=vars.vec){
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(extra[i], 11)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
return(plot.pvals)
}}
plot.pvals = aov.loop(extra=vars.vec)
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(extra[i], 11)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
return(plot.pvals)
}}
plot.pvals = aov.loop(extra=vars.vec)
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
library(dplyr)
library(dplyr)
rm(dplyr)
library(plyr)
library(dplyr)
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
library(ggplot2)
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
gg
dim(plot.pvals)
length(extra)
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(extra[i], 11)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
}
return(plot.pvals)
}
plot.pvals = aov.loop(extra=vars.vec)
dim(plot.pvals)
231/11
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
plot.pvals <- within(plot.pvals,
order.vars = arrange(order.vars, med)
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
gg
saveRDS(plot.pvals, "C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data/AOV_varimp_plot.rds")
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
saveRDS(plot.pvals, "C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data/AOV_varimp_plot.rds")
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
length(vars.vec)
plot.pvals %>% filter(p.val <=0.05, mod.vars == "add.variable")
names(all7c) %in% 'pc.director'
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business','Biz.type',
'Biz.size', 'pc.director',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-12]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-12]
add.variable = rep(extra[i], 11)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
}
return(plot.pvals)
}
plot.pvals = aov.loop(extra=vars.vec)
#order levels in plot.pvals by median
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
gg
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business','Biz.type',
'Biz.size', 'pc.director',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-15]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-15]
add.variable = rep(extra[i], 14)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
}
return(plot.pvals)
}
plot.pvals = aov.loop(extra=vars.vec)
vars.vec<- c('Job.Source', 'Job.Detail.Secondary', 'Type', 'Project.Value', 'no.employees','code.client',
'client.age', 'contact.count', 'JD.Second', 'Billing.Type', 'dist','Post.Code',
'code.contact','contact.count', 'Job.Type.Primary','JD.Primary','ProjEng.Pos', 'code.ProjEng',
'pos.tech', 'majority.pos', 'pc.majpos')
extra=vars.vec
i=1
plot.pvals = NULL
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business','Biz.type',
'Biz.size', 'pc.director',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director", extra[i], sep = "+")
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business','Biz.type',
'Biz.size', 'pc.director',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director + Biz.type +
Biz.size + pc.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-15]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-15]
add.variable = rep(extra[i], 14)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
}
return(plot.pvals)
}
plot.pvals = aov.loop(extra=vars.vec)
#order levels in plot.pvals by median
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
gg
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
summary(model)[[1]] %>% rownames
aov.loop<- function(extra=vars.vec){
plot.pvals = NULL
for (i in 1:length(extra)) {
core.var = all7c[, names(all7c) %in% c('inv.mlsto','timespan','no.users','Discipline',
'pc.pro','client.totinv','Biz.type',
'code.director','Num.disc','Business',
'Biz.size', 'pc.director',
'return.pdol', extra[i])]
core.var = core.var[!is.na(core.var[, extra[i]]),]
formula = paste("return.pdol ~ inv.mlsto + Discipline + Business+Biz.type + Num.disc +
no.users + client.totinv + pc.pro + timespan + code.director +
Biz.size + pc.director", extra[i], sep = "+")
model = aov(as.formula(formula),data = core.var,na.action = na.omit)
#create columns for results and plotting
mod.vars = summary(model)[[1]] %>% rownames %>% .[-14]
mod.vars = sub("\\s+$", "", mod.vars)
mod.vars = sub(extra[i], "add.variable", mod.vars)
p.val = summary(model)[[1]]$'Pr(>F)' %>% .[-14]
add.variable = rep(extra[i], 13)
plot.pvals = rbind(plot.pvals, data.frame(mod.vars, p.val, add.variable))
}
return(plot.pvals)
}
plot.pvals = aov.loop(extra=vars.vec)
#order levels in plot.pvals by median
order.vars = ddply(plot.pvals, .(mod.vars), summarise, med = median(p.val))
order.vars = arrange(order.vars, med)
plot.pvals <- within(plot.pvals,
mod.vars <- factor(mod.vars,
levels=order.vars$mod.vars))
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_hline(yintercept = 0.05, colour = 'red', linetype = 2) +
scale_y_continuous(breaks = c(0,0.05,.25,.5,.75,1)) +
labs(y = "P value of F statistic", x = "Independent Variables",
title = "Summary of P-values from Anova tests")
gg
saveRDS(plot.pvals, "C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data/AOV_varimp_plot.rds")
gg <- ggplot(plot.pvals, aes(x = mod.vars, y = p.val)) + geom_boxplot() +
plot.pvals %>% filter(p.val <=0.05, mod.vars == "add.variable")
cfor.varimp = readRDS("C:/Users/n9232371/Documents/github/consult/finalwriteup/report_data/cfor_varimp.rds")
cfor.varimp
q + geom_bar(stat='identity')
ggplot(data=var.imp, aes(x=var, y=imp)) +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_bar(stat='identity') +
labs(y = "Relative Variable Importance Value", x = "Independent Variables", title = "cForest Variable Importance rankings of Complete Variables")
head(plot.pvals)
plot.pvals %>% filter(add.variable == "pc.majpos")
vars<- list('Job.Source', 'Job.Detail.Secondary', 'Type', 'Project.Value', 'no.employees',
'code.client',
'client.age', 'contact.count', 'JD.Second', 'Billing.Type', 'pos.tech',
'majority.pos', 'pc.majpos',
c('dist','Post.Code'),
c('code.contact','contact.count'), c('Job.Type.Primary','JD.Primary'),
c('ProjEng.Pos', 'code.ProjEng'))
cfor.plotsave<- function(extra= vars, name= 'vare'){
for(i in 1:length(vars)){
core.var= all7c[,names(all7c) %in% c('inv.mlsto', 'timespan', 'no.users',
'Discipline', 'pc.pro',
'client.totinv', 'pc.director', 'code.director', 'Num.disc',
'Business', 'Biz.type', 'Biz.size', 'return.pdol', extra[[i]])]
core.var = core.var[!is.na(core.var[,extra[[i]][1]]),]
#run cforest
cfor.var1= cforest(return.pdol~.,
data= core.var)
#calculate variable importances
var.imp= varimp(cfor.var1) %>% as.data.frame
colnames(var.imp)[names(var.imp) %in% '.']= 'imp'
var.imp$var = rownames(var.imp)
#reorder levels for bar plot
var.imp<- within(var.imp,
var <- factor(var,levels=var.imp[order(-abs(var.imp$imp)),]$var))
q= ggplot(data=var.imp, aes(x=var, y=imp)) + theme(axis.text.x=element_text(angle=45,hjust=1))
r=q + geom_bar(stat='identity') +
labs(title = extra[[i]])
#save plot
ggsave(plot=r,
filename=paste(name,i,'.png',sep=''),
path= 'C:/Users/n9232371/Documents/Consultbusiness/barplots/cforests/')
cat(i," ")
}
}
cfor.plotsave(extra=list('pc.majpos'), name='varf')
library(party)
cfor.plotsave(extra=list('pc.majpos'), name='varf')
cfor.plotsave<- function(extra= vars, name= 'vare'){
for(i in 1:length(extra)){
core.var= all7c[,names(all7c) %in% c('inv.mlsto', 'timespan', 'no.users',
'Discipline', 'pc.pro',
'client.totinv', 'pc.director', 'code.director', 'Num.disc',
'Business', 'Biz.type', 'Biz.size', 'return.pdol', extra[[i]])]
core.var = core.var[!is.na(core.var[,extra[[i]][1]]),]
#run cforest
cfor.var1= cforest(return.pdol~.,
data= core.var)
#calculate variable importances
var.imp= varimp(cfor.var1) %>% as.data.frame
colnames(var.imp)[names(var.imp) %in% '.']= 'imp'
var.imp$var = rownames(var.imp)
#reorder levels for bar plot
var.imp<- within(var.imp,
var <- factor(var,levels=var.imp[order(-abs(var.imp$imp)),]$var))
q= ggplot(data=var.imp, aes(x=var, y=imp)) + theme(axis.text.x=element_text(angle=45,hjust=1))
r=q + geom_bar(stat='identity') +
labs(title = extra[[i]])
#save plot
ggsave(plot=r,
filename=paste(name,i,'.png',sep=''),
path= 'C:/Users/n9232371/Documents/Consultbusiness/barplots/cforests/')
cat(i," ")
}
}
cfor.plotsave<- function(extra= vars, name= 'vare'){
for(i in 1:length(extra)){
core.var= all7c[,names(all7c) %in% c('inv.mlsto', 'timespan', 'no.users',
'Discipline', 'pc.pro',
'client.totinv', 'pc.director', 'code.director', 'Num.disc',
'Business', 'Biz.type', 'Biz.size', 'return.pdol', extra[[i]])]
core.var = core.var[!is.na(core.var[,extra[[i]][1]]),]
#run cforest
cfor.var1= cforest(return.pdol~.,
data= core.var)
#calculate variable importances
var.imp= varimp(cfor.var1) %>% as.data.frame
colnames(var.imp)[names(var.imp) %in% '.']= 'imp'
var.imp$var = rownames(var.imp)
#reorder levels for bar plot
var.imp<- within(var.imp,
var <- factor(var,levels=var.imp[order(-abs(var.imp$imp)),]$var))
q= ggplot(data=var.imp, aes(x=var, y=imp)) + theme(axis.text.x=element_text(angle=45,hjust=1))
r=q + geom_bar(stat='identity') +
labs(title = extra[[i]])
#save plot
ggsave(plot=r,
filename=paste(name,i,'.png',sep=''),
path= 'C:/Users/n9232371/Documents/Consultbusiness/barplots/cforests/')
cat(i," ")
}
}
cfor.plotsave(extra=list('pc.majpos'), name='varf')
summary(all7c$Business)
levels(all7c$Business) %>% length
?rainbow
rainbow(10)
mean(.4709, .4353, .4541, .4553, .4394, .4579, .3972)
sd(.4709, .4353, .4541, .4553, .4394, .4579, .3972)
sd(c(.4709, .4353, .4541, .4553, .4394, .4579, .3972))
mean(.4709, .4541, .4553, .4394, .4579, .3972)
sd(c(.4709, .4541, .4553, .4394, .4579, .3972))
