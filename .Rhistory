all7c %>% select(hours.perday) %>% arrange(hours.perday) %>% filter(hours.perday == 0) %>% nrow
summary(all7c$hrs.mlsto)
all7c %>% select(hrs.mlsto) %>% arrange(hours.perday) %>% filter(hours.perday == 0) %>% nrow
all7c %>% select(hrs.mlsto) %>% arrange(hrs.mlsto) %>% filter(hrs.mlsto == 0) %>% nrow
summary(all7c$pc.majpos)
all7<- read.csv('all7.csv')[,-1]
all7$Start.Date<- as.Date(all7$Start.Date)
qqnorm(all7$return.pdol)
qqPlot(all7$return.pdol)
qqPlot(all7d$inv.mlsto)
clust<- all7c %>% select(inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos)
i=1
all7d[,i] %>% head
colnames(all7d)
for(i in 1:ncol(clust)){
qqPlot(clust[,i])
}
?qqPlot
colnames(clust)[i]
for(i in 1:ncol(clust)){
qqPlot(clust[,i],
main=colnames(clust)[i])
}
clust[,i] %>% log %>% head
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% log,
main=colnames(clust)[i])
}
log(0)
log(.1)
log(.01)
clust<- all7c %>% select(inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
for(i in 1:ncol(clust)){
qqPlot(clust[,i],
main=colnames(clust)[i])
}
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% log,
main=colnames(clust)[i])
}
summary(clust)
log(1)
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$pc.pro ==0,]$pc.pro <- 5
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$balance.mlsto ==0,]$balance.mlsto <- 1
clust[clust$hrs.mlsto ==0,]hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]cost.mlsto <- 1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
clust[clust$return.pdol ==0,]$return.pdol <- .01
#Q-Q plot of each variable
for(i in 1:ncol(clust)){
qqPlot(clust[,i],
main=colnames(clust)[i])
}
#qqplots for log of each variable
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% log,
main=colnames(clust)[i])
}
log(-1)
clust %>% select(balance.mlsto) %>% filter(balance.mlsto<0) %>% nrow
clust$balance.mlsto<- clust$balance.mlsto+160000
summary(clust$balance.mlsto)
qqPlot(clust$balance.mlsto)
qqPlot(clust$balance.mlsto %>% log)
qqPlot(log(clust$balance.mlsto))
clust$balance.mlsto<- clust$balance.mlsto-160000
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% log,
qqPlot(log(clust$balance.mlsto))
i=1
ggplot(clust, aes_string(x=clust[,i])) + geom_histogram(aes(y=..density..))
clust[,i] %>% head
ggplot(clust, aes_string(x=colnames(clust[i])))) + geom_histogram(aes(y=..density..))
ggplot(clust, aes_string(x=colnames(clust[i]))) + geom_histogram(aes(y=..density..))
for(i in 1:ncol(clust)){
ggplot(clust, aes_string(x=colnames(clust[i]))) + geom_histogram(aes(y=..density..))
}
ggplot(clust, aes_string(x=colnames(clust[i]))) + geom_histogram(aes(y=..density..))
i
ncol(clust)
for(i in 1:ncol(clust)){
ggplot(clust, aes_string(x=colnames(clust[i]))) + geom_histogram(aes(y=..density..))
}
for(i in 1:ncol(clust)){
print(
ggplot(clust, aes_string(x=colnames(clust[i]))) + geom_histogram(aes(y=..density..))
)
}
clust.log<- log(clust)
for(i in 1:ncol(clust.log)){
print(
ggplot(clust.log, aes_string(x=colnames(clust.log[i]))) + geom_histogram(aes(y=..density..))
)
}
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
summary(clust$Num.days)
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto', 'timespan')
i=1
logged[i]
clust[,logged[i]] %>% head
clust[,logged[i]]<- clust[,logged[i]] %>% log
clust[,logged[i]] %>% head
log(1610)
for(i in 2:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$hrs.mlsto %>% head
all7c$hrs.mlsto %>% head
log(11.5)
clust$cost.mlsto %>% head
?scale
str(clust)
clust<- scale(clust[,-1])
head(clust)
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% sqrt,
main=colnames(clust)[i])
}
for(i in 1:ncol(clust[,-1])){
qqPlot(clust[,i] %>% sqrt,
main=colnames(clust)[i])
}
ncol(clust[,-1]
)
str(clust)
for(i in 2:ncol(clust[,-1])+1){
qqPlot(clust[,i] %>% sqrt,
main=colnames(clust)[i])
}
for(i in 1:ncol(clust)){
qqPlot(clust[,i] %>% log,
main=colnames(clust)[i])
}
for(i in 2:ncol(clust)+1){
qqPlot(clust[,i] %>% log,
main=colnames(clust)[i])
}
ggplot(clust, aes_string(x='timespan') + geom_histogram(aes(y=..density..))
)
ggplot(clust, aes_string(x='timespan')) + geom_histogram(aes(y=..density..))
clust$timespan <- clust$timespan %>% sqrt
ggplot(clust, aes_string(x='timespan')) + geom_histogram(aes(y=..density..))
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1])
x<- dist(clust, method = 'euclidean')
fit<- hclust(x, method = 'ward.D2')
plot(fit)
rect.hclust(fit, k=8, border='red')
rect.hclust(fit, k=7, border='red')
table(fit)
head(fit)
clust$groups<- as.factor(cutree(fit,k=8))
head(clust)
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1])
x<- dist(clust, method = 'euclidean')
fit<- hclust(x, method = 'ward.D2')
as.factor(cutree(fit,k=8)) %>% head
clust$groups<- as.factor(cutree(fit,k=8))
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1])
dim(clust)
as.factor(cutree(fit,k=8)) %>% head
length(as.factor(cutree(fit,k=8)))
dim(clust)
cutree(fit,k=8) %>% class
clust$groups<- cutree(fit,k=8) %>% class
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1])
test<- cutree(fit,k=8)
head(test)
test<-clust
dim(test)
test$groups<- cutree(fit,k=8)
test<-clust
test$group<- cutree(fit,k=8)
head(test)
test
a<- cutree(fit,k=8)
class(a)
a<- cutree(fit,k=8) %>% as.vector
class(a)
is.vector(a)
test$group<- a
head(test)
a
class(test)
class(clust)
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, pc.majpos, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1]) %>% as.data.frame
dim(clust)
clust$groups<- cutree(fit,k=8)
head(clust)
table(clust$groups)
install.packages('dendextend')
library('dendextend')
dend<- fit %>% as.dendrogram
dend %>% color_branches(k=8) %>% plot(horiz=T)
rect.dendrogram(dend, k=8, horiz=T)
dim(clust)
clust<- clust[,-15]
k1<- kmeans(clust[,-1], 8)
class(clust)
head(clust)
k1<- kmeans(clust, 8)
summary(clust)
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1]) %>% as.data.frame
x<- dist(clust, method = 'euclidean')
fit<- hclust(x, method = 'ward.D2')
plot(fit)
rect.hclust(fit, k=8, border='red')
rect.hclust(fit, k=5, border='red')
head(Clust)
head(clust)
summary(clust)
k1<- kmeans(clust, 5)
k1
k1$centers
k1$centers %>% class
ggplot(k1$centers) + geom_bar()
k1$centers %>% as.data.frame
melt(k1)
melt(k1$centers %>% as.data.frame)
k1.centres<- k1$centers %>% as.data.frame
k1.centres
k1.centres$group<- rownames(k1.centres)
k1.centres
k1.melt<- melt(k1$centers %>% as.data.frame)
k1.melt
?melt
melt(k1.centres)
ggplot(k1.melt, aes(x=group, fill = variable)) + geom_bar(stat='identity', position='dodge')
k1.melt$group
k1.melt<- melt(k1.centres)
ggplot(k1.melt, aes(x=group, fill = variable)) + geom_bar(stat='identity', position='dodge')
k1.melt
k1.melt$group %>% head
ggplot(k1.melt, aes(x=group, fill = variable)) + geom_bar(stat='identity', position='dodge')
class(k1.melt)
ggplot(k1.melt, aes(x=group)) + geom_bar(stat='identity', position='dodge')
head(k1.melt)
k1.melt$group %>% class
k1.melt$group<- k1.melt$group %>% as.factor
ggplot(k1.melt, aes(x=group)) + geom_bar(stat='identity', position='dodge')
k1.melt$group %>% class
str(k1.melt)
ggplot(k1.melt, aes(x=group, y= value, fill=variable)) + geom_bar(stat='identity', position='dodge')
ggplot(k1.melt, aes(x=variable, y= value, fill=group)) + geom_bar(stat='identity', position='dodge')
ggplot(k1.melt, aes(x=variable, y= value)) + geom_bar(stat='identity', position='dodge')+
facet_wrap(~group)
ggplot(k1.melt, aes(x=variable, y= value, fill=variable)) + geom_bar(stat='identity', position='dodge')+
facet_wrap(~group) +
theme(axis.text.x=element_text(angle=45,hjust=1))
head(clust)
clust<- all7c %>% select(mlsto, inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, return.pdol)
#get rid of zeroes for log transform
clust[clust$timespan ==0,]$timespan <- 1
clust[clust$hours.perday ==0,]$hours.perday <- .1
clust[clust$hrs.mlsto ==0,]$hrs.mlsto <- 1
clust[clust$cost.mlsto ==0,]$cost.mlsto <- 1
#take log of all variables to be logged in a for loop
logged<- c('cost.mlsto', 'hrs.mlsto', 'hours.perday', 'Num.days', 'client.totinv',
'no.users', 'inv.mlsto')
for(i in 1:length(logged)){
clust[,logged[i]]<- clust[,logged[i]] %>% log
}
clust$timespan<- sqrt(clust$timespan)
#now to standardise
clust<- scale(clust[,-1]) %>% as.data.frame
x<- dist(clust, method = 'euclidean')
fit<- hclust(x, method = 'ward.D2')
clust$groups<- cutree(fit,k=5)
head(clust)
k1<- kmeans(clust %>% select(-groups), 5)
k1
str(k1)
head(k1$cluster)
dim(k1$cluster)
k1$cluster %>% class
length(k1$cluster)
all7c %>% select(inv.mlsto) %>% head
cluster %>% select(inv.mlsto) %>% head
clust %>% select(inv.mlsto) %>% head
all7c %>% select(inv.mlsto) %>% head
log(2400)
mean(all7c$inv.mlsto)
sd(all7c$inv.mlsto)
sd(all7c$inv.mlsto %>% log)
mean(all7c$inv.mlsto %>% log)
(7.78-8.4349)/1.57
(log(2400)-8.434948)/1.57437
all7c$groups<- k1$cluster
kmeans.plot<- all7c %>% select(inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, return.pdol, groups)
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean))
all7c.plot
k2.melt<- melt(all7c.plot)
k2.melt
?melt
all7c%groups<- as.factor(all7c$groups)
all7c$groups<- as.factor(all7c$groups)
k2.melt<- melt(all7c.plot, value.name == )
k2.melt<- melt(all7c.plot)
k2.melt
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean))
all7c.plot
k2.melt<- melt(all7c.plot, value.name =c('groups','colnames'))
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean))
k2.melt<- melt(all7c.plot)
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean))
k2.melt<- melt(all7c.plot)
k2.melt
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean) %>% as.numeric)
all7c.plot
k2.melt<- melt(all7c.plot)
k2.melt
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean) %>% as.numeric)
kmeans.plot<- all7c %>% select(inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, return.pdol, groups)
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean) %>% as.numeric)
all7c.plot
all7c.plot<- ddply(kmeans.plot, .('groups', colnames), numcolwise(mean) %>% as.numeric)
all7c.plot
all7c.plot<- ddply(kmeans.plot, .(groups), numcolwise(mean) %>% as.numeric)
k2.melt<- melt(all7c.plot, id.vars=c('groups',colnames))
all7c.plot
all7c.plot$groups<- rownames(all7c.plot)
k2.melt<- melt(all7c.plot)
k2.melt
ggplot(k2.melt, aes(x=variable, y= value, fill=variable)) + geom_bar(stat='identity', position='dodge')+
facet_wrap(~groups) +
theme(axis.text.x=element_text(angle=45,hjust=1))
all7c.plot
table(all7c$groups)
ddply(all7c, .(groups), summarise, sum(balance.mlsto))
ddply(all7c, .(groups), summarise, sum(hrs.mlsto))
all7c.plot %>% round(2)
all7c.plot %>% select(-groups) %>% round(2)
table(all7c$groups)
ddply(all7c, .(groups), summarise, sum(balance.mlsto))
ddply(all7c, .(groups), summarise, sum(hrs.mlsto))
ddply(all7c, .(groups), summarise, sum(balance.mlsto)) %>% prop.table()
ddply(all7c, .(groups), summarise, sum(balance.mlsto)) %>% prop.table(,2)
table(all7c$groups) %>% class
table(all7c$groups) %>% prop.table
ddply(all7c, .(groups), summarise, sum(balance.mlsto)) %>% as.table %>% prop.table()
ddply(all7c, .(groups), summarise, sum(balance.mlsto)) %>% as.matrix %>% prop.table()
bal<- sum(all7c$balance.mlsto)
bal
bal<- sum(balance.mlsto)
bal<- sum(all7c$balance.mlsto)
bal
ddply(all7c, .(groups), summarise, sum(balance.mlsto)/bal %>% round(2))
ddply(all7c, .(groups), summarise, round(sum(balance.mlsto)/bal, 2))
ddply(all7c, .(groups), summarise, round(sum(balance.mlsto)/bal*100, 2))
ddply(all7c, .(groups), summarise, round(sum(balance.mlsto)/bal*100, 1))
ddply(all7c, .(groups), summarise, bal.pc= round(sum(balance.mlsto)/bal*100, 1))
clust.summary<- all7c.plot %>% select(-groups) %>% round(2)
clust.summary$bal.pc<- ddply(all7c, .(groups), summarise, bal.pc= round(sum(balance.mlsto)/bal*100, 1)) %>% select(2)
clust.summary
clust.summary
hrs<-  sum(all7c$hrs.mlsto)
clust.summary$hrs.pc<- ddply(all7c, .(groups), summarise, bal.pc= round(sum(hrs.mlsto)/hrs*100, 1)) %>%
select(2)
table(all7c$groups) %>% prop.table %>% as.data.frame
table(all7c$groups) %>% prop.table %>% as.data.frame %>% round(2)
tab<- table(all7c$groups) %>% prop.table %>% as.data.frame
tab[,2] %>% round(2)
tab[,2]*100 %>% round(2)
round( tab[,2]*100, 1)
clust.summary$pc.jobs<- round( tab[,2]*100, 1)
clust.summary
clust.summary<- all7c.plot %>% select(-groups) %>% round(2)
tab<- table(all7c$groups) %>% prop.table %>% as.data.frame
bal<- sum(all7c$balance.mlsto)
hrs<-  sum(all7c$hrs.mlsto)
clust.summary$pc.jobs<- round( tab[,2]*100, 1)
clust.summary$bal.pc<- ddply(all7c, .(groups), summarise, bal.pc= round(sum(balance.mlsto)/bal*100, 1)) %>%
select(2)
clust.summary$hrs.pc<- ddply(all7c, .(groups), summarise, hrs.pc= round(sum(hrs.mlsto)/hrs*100, 1)) %>%
select(2)
clust.summary
clust.summary
clust.summary %>% View
clust.summary[,c(1,12,10)]
clust.summary[,c(1,12,10,11, 13, 9,2,7,6,3,4,8,5,14:16)]
plot(fit)
rect.hclust(fit, k=5, border='red')
all7c %>% select(inv.mlsto, timespan, no.users, pc.pro, client.totinv,
Num.disc, Num.days, mean.peeps, hours.perday, balance.mlsto, hrs.mlsto,
cost.mlsto, return.pdol, groups) %>% head
all7c.plot
library('RcmdrPlugin.BCA')
library('RcmdrPlugin.BCA')
setwd("~/OneDrive/shared files")
fun<-data.frame(read.csv("jackjill.csv"))
dim(funu)
dim(fun)
str(fun)
